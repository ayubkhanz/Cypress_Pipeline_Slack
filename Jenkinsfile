import groovy.json.JsonOutput

def COLOR_MAP = [ // Its an array which contains key, value pairs
    'SUCCESS': 'good',//When the build is successful then it sends the slack notification 
                      // as good and its color is GREEN
    'FAILURE': 'danger'//When the build is a Failure then it sends the slack notification 
                      // as danger and its color is RED
]

// Below defining a function to get the Build UserId and return the UserId for 
// future usage in this script, we will get this in Post Build Actions
def getBuildUser(){
    return currentBuild.rawBuild.getCause(Cause.UserIdCause).getUserId()
}

pipeline{
   agent any //You can specify which stage/machine you want to execute, here any

   environment{
       BUILD_USER = ''
   }// Here we are defining this BUILD_USER variable to get the values from above
    // function getBuildUser();

  parameters{
       string(name: "SPEC", defaultValue: "cypress/integration/**/**", description:"Enter the Script Path you want to execute")
       choice(name: "BROWSER", choices: ['chrome', 'edge', 'firefox'], description: "Choose the browser in which you want to execute your scripts.")
    }//u can define any type of parameters string,boolean,passwords etc..
     //SPEC and BROWSER are 2 parameters, in SPEC you have to enter Script Path
     //in BROWSER you have to select browser
    
    options{
        ansiColor('xterm')
    }// to have better and colourful output in Console log output

    stages{
       stage('Build'){
           steps{
               echo "Buiding application"
           }
       }
       stage('Testing'){
           steps{
               bat "npm i"
               bat "npx cypress run --browser ${BROWSER} --spec ${SPEC}"
           }//bat - is like executing batch command in windows cmd/jenkins
       }
       stage('Deploy'){
           steps{
               echo "Deploying the application"
           }
       }
   }

   post{
       always{

           script{
               BUILD_USER = getBuildUser()
           }// Here were are retreiving build user values from from frunction getBuildUser()
            // and assigning that values to the above defined variable BUILD_USER 

           
           //Below the keyword slackSend, we use for configuring the Slack.
           slackSend channel: '#cypress', // my channel name is cypress
                     color: COLOR_MAP[currentBuild.currentResult], 
                     // currentBuild.currentResult will give u the status of the build
                     // depending of the status SUCCESS / FAILURE of the build COLOR_MAP array will pickup the
                     // color, if it is sUCCESS it will display "good" in green, if it is Failure it will
                     // display "danger" in red color
                     message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} by ${BUILD_USER} \n Tests: ${SPEC} executed in browser ${BROWSER} \n More info at ${env.BUILD_URL}HTML_20Report/"
                     // This is the message we need to display in slack notification
                     // Look at the message body 
                     // 1) *${currentBuild.currentResult} -- will display the Status of the build
                     // 2) Job -- it is a text
                     // 3) ${env.JOB_NAME} -- it will display the name of the Job from Jenkins.
                     // 4) build ${env.BUILD_NUMBER} -- Here build is a text and env.BUILD_NUMBER will
                                                     // pickup the build no generated in jenkins pipeline
                     // 5) by ${BUILD_USER} -- by is a text and BUILD_USER is the one
                     // who triggered the build and you get this from above BUILD_USER = getBuildUser();
                     // 6) \n --  new line
                     // 7) Tests:  -- it is a text
                     // 8) ${SPEC} -- it will pickup the value of SPEC from above parameters  
                     // 9) executed in browser -- it is a text
                     // 10) ${BROWSER} -- it will pickup the value of the BROWSER from above parameters
                     // 11) ${env.BUILD_URL}HTML_20Report/ -- It will give you the  link of HTML report
                            // generated by jenkins. for example ${env.BUILD_URL} will gives you the url
                            // http://localhost:9090/job/CypressPipelineGithub/5/ and HTML_20Report/ is
                            // end point of the Url
           publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'cypress/report', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
       }
   }// Here post --- is a Post Build Action and
    // always -- No matter what happens to the rest of the pipeline script it always
    // runs the script in always{ ....} section.

}
